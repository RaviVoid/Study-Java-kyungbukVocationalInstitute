/**
 * 이 Class에 대한 설명을 달아두는 것
 * 내가 만든 첫번째 프로그램
 * @author smart04
 *
 */
public class Hello {

	/**
	 * 제일 먼저 호출되는 main 함수
	 * 해당 함수의 상단에 입력한다
	 * main함수에 마우스 오버시에 이곳에 기록한 설명 출력 됨
	 * @param args
	 */
	public static void main(String[] args) {
		new Hello().a();
		// 한줄 주석
		// 컨트롤+"/" 커서가 놓인 위치의 한줄 주석 단축키
		// 컨트롤+쉬프트+"/" 블럭형 여러줄 주석 단축키
		/*여러줄 주석
		 * 입니다		 */
		// TODO 는 따로 강조 키워드 설정 가능
		System.out./*한줄주석*/println(/*한줄주석*/"Hello./*한줄주석안됨*/welcome to the java world");
		// 명령어 끝에는 ";"세미콜론을 반드시 넣어주자
		// System.out = 클래스
		// println = 메소드
		// 표준 출력 명령어
		System.out.print("Hello");
		System.out.print("     ");
		System.out.println("옆에 띄워서 붙이고 싶다");
		// ln은 출력후 줄을 바꿔주는 명령
	}

	/**
	 * a()기능은 ????이다
	 */
	private void a() {
	}

}
		
// 변수타입 int 변수명 i; 변수선언해서 메모리 공간을 사용하겠다
// 변수명 명명규칙
// 변수명은 가독성을 높여서 길게 적는다
// 영문자, 숫자, 특수문자($와 _를 조합가능)
// 첫글자는 숫자가 올 수 없다
// 첫글자는 "소문자"로 시작한다
// 단어와 단어가 만나는 첫글자는 대문자로 한다(카멜표기법 낙타등)

// 클래스명 명명규칙
// 변수명은 가독성을 높여서 길게 적는다
// 영문자, 숫자, 특수문자($와 _를 조합가능)
// 첫글자는 숫자가 올 수 없다
// 첫글자는 "대문자"로 시작한다
// 단어와 단어가 만나는 첫글자는 대문자로 한다(카멜표기법 낙타등)

// 클래스명 명명규칙
// 변수명은 가독성을 높여서 길게 적는다
// 영문자, 숫자, 특수문자($와 _를 조합가능)
// 첫글자는 숫자가 올 수 없다
// 첫글자는 "대문자"로 시작한다
// 단어와 단어가 만나는 첫글자는 대문자로 한다(카멜표기법 낙타등)
// "메소드명 뒤에 ()가 온다"

